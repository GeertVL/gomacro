// this file was generated by gomacro command: import "encoding/gob"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "encoding/gob"
	. "reflect"
)

func Package_encoding_gob() (map[string]Value, map[string]Type) {
	return map[string]Value{
			"NewDecoder":   ValueOf(pkg.NewDecoder),
			"NewEncoder":   ValueOf(pkg.NewEncoder),
			"Register":     ValueOf(pkg.Register),
			"RegisterName": ValueOf(pkg.RegisterName),
		}, map[string]Type{
			"CommonType": TypeOf((*pkg.CommonType)(nil)).Elem(),
			"Decoder":    TypeOf((*pkg.Decoder)(nil)).Elem(),
			"Encoder":    TypeOf((*pkg.Encoder)(nil)).Elem(),
			"GobDecoder": TypeOf((*pkg.GobDecoder)(nil)).Elem(),
			"GobEncoder": TypeOf((*pkg.GobEncoder)(nil)).Elem(),
		}
}

func init() {
	binds, types := Package_encoding_gob()
	Binds["encoding/gob"] = binds
	Types["encoding/gob"] = types
}
