// this file was generated by gomacro command: import "unicode"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "unicode"
	. "reflect"
)

func init() {
	Binds["unicode"] = map[string]Value{
		"ASCII_Hex_Digit":	ValueOf(&pkg.ASCII_Hex_Digit).Elem(),
		"Adlam":	ValueOf(&pkg.Adlam).Elem(),
		"Ahom":	ValueOf(&pkg.Ahom).Elem(),
		"Anatolian_Hieroglyphs":	ValueOf(&pkg.Anatolian_Hieroglyphs).Elem(),
		"Arabic":	ValueOf(&pkg.Arabic).Elem(),
		"Armenian":	ValueOf(&pkg.Armenian).Elem(),
		"Avestan":	ValueOf(&pkg.Avestan).Elem(),
		"AzeriCase":	ValueOf(&pkg.AzeriCase).Elem(),
		"Balinese":	ValueOf(&pkg.Balinese).Elem(),
		"Bamum":	ValueOf(&pkg.Bamum).Elem(),
		"Bassa_Vah":	ValueOf(&pkg.Bassa_Vah).Elem(),
		"Batak":	ValueOf(&pkg.Batak).Elem(),
		"Bengali":	ValueOf(&pkg.Bengali).Elem(),
		"Bhaiksuki":	ValueOf(&pkg.Bhaiksuki).Elem(),
		"Bidi_Control":	ValueOf(&pkg.Bidi_Control).Elem(),
		"Bopomofo":	ValueOf(&pkg.Bopomofo).Elem(),
		"Brahmi":	ValueOf(&pkg.Brahmi).Elem(),
		"Braille":	ValueOf(&pkg.Braille).Elem(),
		"Buginese":	ValueOf(&pkg.Buginese).Elem(),
		"Buhid":	ValueOf(&pkg.Buhid).Elem(),
		"C":	ValueOf(&pkg.C).Elem(),
		"Canadian_Aboriginal":	ValueOf(&pkg.Canadian_Aboriginal).Elem(),
		"Carian":	ValueOf(&pkg.Carian).Elem(),
		"CaseRanges":	ValueOf(&pkg.CaseRanges).Elem(),
		"Categories":	ValueOf(&pkg.Categories).Elem(),
		"Caucasian_Albanian":	ValueOf(&pkg.Caucasian_Albanian).Elem(),
		"Cc":	ValueOf(&pkg.Cc).Elem(),
		"Cf":	ValueOf(&pkg.Cf).Elem(),
		"Chakma":	ValueOf(&pkg.Chakma).Elem(),
		"Cham":	ValueOf(&pkg.Cham).Elem(),
		"Cherokee":	ValueOf(&pkg.Cherokee).Elem(),
		"Co":	ValueOf(&pkg.Co).Elem(),
		"Common":	ValueOf(&pkg.Common).Elem(),
		"Coptic":	ValueOf(&pkg.Coptic).Elem(),
		"Cs":	ValueOf(&pkg.Cs).Elem(),
		"Cuneiform":	ValueOf(&pkg.Cuneiform).Elem(),
		"Cypriot":	ValueOf(&pkg.Cypriot).Elem(),
		"Cyrillic":	ValueOf(&pkg.Cyrillic).Elem(),
		"Dash":	ValueOf(&pkg.Dash).Elem(),
		"Deprecated":	ValueOf(&pkg.Deprecated).Elem(),
		"Deseret":	ValueOf(&pkg.Deseret).Elem(),
		"Devanagari":	ValueOf(&pkg.Devanagari).Elem(),
		"Diacritic":	ValueOf(&pkg.Diacritic).Elem(),
		"Digit":	ValueOf(&pkg.Digit).Elem(),
		"Duployan":	ValueOf(&pkg.Duployan).Elem(),
		"Egyptian_Hieroglyphs":	ValueOf(&pkg.Egyptian_Hieroglyphs).Elem(),
		"Elbasan":	ValueOf(&pkg.Elbasan).Elem(),
		"Ethiopic":	ValueOf(&pkg.Ethiopic).Elem(),
		"Extender":	ValueOf(&pkg.Extender).Elem(),
		"FoldCategory":	ValueOf(&pkg.FoldCategory).Elem(),
		"FoldScript":	ValueOf(&pkg.FoldScript).Elem(),
		"Georgian":	ValueOf(&pkg.Georgian).Elem(),
		"Glagolitic":	ValueOf(&pkg.Glagolitic).Elem(),
		"Gothic":	ValueOf(&pkg.Gothic).Elem(),
		"Grantha":	ValueOf(&pkg.Grantha).Elem(),
		"GraphicRanges":	ValueOf(&pkg.GraphicRanges).Elem(),
		"Greek":	ValueOf(&pkg.Greek).Elem(),
		"Gujarati":	ValueOf(&pkg.Gujarati).Elem(),
		"Gurmukhi":	ValueOf(&pkg.Gurmukhi).Elem(),
		"Han":	ValueOf(&pkg.Han).Elem(),
		"Hangul":	ValueOf(&pkg.Hangul).Elem(),
		"Hanunoo":	ValueOf(&pkg.Hanunoo).Elem(),
		"Hatran":	ValueOf(&pkg.Hatran).Elem(),
		"Hebrew":	ValueOf(&pkg.Hebrew).Elem(),
		"Hex_Digit":	ValueOf(&pkg.Hex_Digit).Elem(),
		"Hiragana":	ValueOf(&pkg.Hiragana).Elem(),
		"Hyphen":	ValueOf(&pkg.Hyphen).Elem(),
		"IDS_Binary_Operator":	ValueOf(&pkg.IDS_Binary_Operator).Elem(),
		"IDS_Trinary_Operator":	ValueOf(&pkg.IDS_Trinary_Operator).Elem(),
		"Ideographic":	ValueOf(&pkg.Ideographic).Elem(),
		"Imperial_Aramaic":	ValueOf(&pkg.Imperial_Aramaic).Elem(),
		"In":	ValueOf(pkg.In),
		"Inherited":	ValueOf(&pkg.Inherited).Elem(),
		"Inscriptional_Pahlavi":	ValueOf(&pkg.Inscriptional_Pahlavi).Elem(),
		"Inscriptional_Parthian":	ValueOf(&pkg.Inscriptional_Parthian).Elem(),
		"Is":	ValueOf(pkg.Is),
		"IsControl":	ValueOf(pkg.IsControl),
		"IsDigit":	ValueOf(pkg.IsDigit),
		"IsGraphic":	ValueOf(pkg.IsGraphic),
		"IsLetter":	ValueOf(pkg.IsLetter),
		"IsLower":	ValueOf(pkg.IsLower),
		"IsMark":	ValueOf(pkg.IsMark),
		"IsNumber":	ValueOf(pkg.IsNumber),
		"IsOneOf":	ValueOf(pkg.IsOneOf),
		"IsPrint":	ValueOf(pkg.IsPrint),
		"IsPunct":	ValueOf(pkg.IsPunct),
		"IsSpace":	ValueOf(pkg.IsSpace),
		"IsSymbol":	ValueOf(pkg.IsSymbol),
		"IsTitle":	ValueOf(pkg.IsTitle),
		"IsUpper":	ValueOf(pkg.IsUpper),
		"Javanese":	ValueOf(&pkg.Javanese).Elem(),
		"Join_Control":	ValueOf(&pkg.Join_Control).Elem(),
		"Kaithi":	ValueOf(&pkg.Kaithi).Elem(),
		"Kannada":	ValueOf(&pkg.Kannada).Elem(),
		"Katakana":	ValueOf(&pkg.Katakana).Elem(),
		"Kayah_Li":	ValueOf(&pkg.Kayah_Li).Elem(),
		"Kharoshthi":	ValueOf(&pkg.Kharoshthi).Elem(),
		"Khmer":	ValueOf(&pkg.Khmer).Elem(),
		"Khojki":	ValueOf(&pkg.Khojki).Elem(),
		"Khudawadi":	ValueOf(&pkg.Khudawadi).Elem(),
		"L":	ValueOf(&pkg.L).Elem(),
		"Lao":	ValueOf(&pkg.Lao).Elem(),
		"Latin":	ValueOf(&pkg.Latin).Elem(),
		"Lepcha":	ValueOf(&pkg.Lepcha).Elem(),
		"Letter":	ValueOf(&pkg.Letter).Elem(),
		"Limbu":	ValueOf(&pkg.Limbu).Elem(),
		"Linear_A":	ValueOf(&pkg.Linear_A).Elem(),
		"Linear_B":	ValueOf(&pkg.Linear_B).Elem(),
		"Lisu":	ValueOf(&pkg.Lisu).Elem(),
		"Ll":	ValueOf(&pkg.Ll).Elem(),
		"Lm":	ValueOf(&pkg.Lm).Elem(),
		"Lo":	ValueOf(&pkg.Lo).Elem(),
		"Logical_Order_Exception":	ValueOf(&pkg.Logical_Order_Exception).Elem(),
		"Lower":	ValueOf(&pkg.Lower).Elem(),
		"LowerCase":	ValueOf(pkg.LowerCase),
		"Lt":	ValueOf(&pkg.Lt).Elem(),
		"Lu":	ValueOf(&pkg.Lu).Elem(),
		"Lycian":	ValueOf(&pkg.Lycian).Elem(),
		"Lydian":	ValueOf(&pkg.Lydian).Elem(),
		"M":	ValueOf(&pkg.M).Elem(),
		"Mahajani":	ValueOf(&pkg.Mahajani).Elem(),
		"Malayalam":	ValueOf(&pkg.Malayalam).Elem(),
		"Mandaic":	ValueOf(&pkg.Mandaic).Elem(),
		"Manichaean":	ValueOf(&pkg.Manichaean).Elem(),
		"Marchen":	ValueOf(&pkg.Marchen).Elem(),
		"Mark":	ValueOf(&pkg.Mark).Elem(),
		"MaxASCII":	ValueOf(pkg.MaxASCII),
		"MaxCase":	ValueOf(pkg.MaxCase),
		"MaxLatin1":	ValueOf(pkg.MaxLatin1),
		"MaxRune":	ValueOf(pkg.MaxRune),
		"Mc":	ValueOf(&pkg.Mc).Elem(),
		"Me":	ValueOf(&pkg.Me).Elem(),
		"Meetei_Mayek":	ValueOf(&pkg.Meetei_Mayek).Elem(),
		"Mende_Kikakui":	ValueOf(&pkg.Mende_Kikakui).Elem(),
		"Meroitic_Cursive":	ValueOf(&pkg.Meroitic_Cursive).Elem(),
		"Meroitic_Hieroglyphs":	ValueOf(&pkg.Meroitic_Hieroglyphs).Elem(),
		"Miao":	ValueOf(&pkg.Miao).Elem(),
		"Mn":	ValueOf(&pkg.Mn).Elem(),
		"Modi":	ValueOf(&pkg.Modi).Elem(),
		"Mongolian":	ValueOf(&pkg.Mongolian).Elem(),
		"Mro":	ValueOf(&pkg.Mro).Elem(),
		"Multani":	ValueOf(&pkg.Multani).Elem(),
		"Myanmar":	ValueOf(&pkg.Myanmar).Elem(),
		"N":	ValueOf(&pkg.N).Elem(),
		"Nabataean":	ValueOf(&pkg.Nabataean).Elem(),
		"Nd":	ValueOf(&pkg.Nd).Elem(),
		"New_Tai_Lue":	ValueOf(&pkg.New_Tai_Lue).Elem(),
		"Newa":	ValueOf(&pkg.Newa).Elem(),
		"Nko":	ValueOf(&pkg.Nko).Elem(),
		"Nl":	ValueOf(&pkg.Nl).Elem(),
		"No":	ValueOf(&pkg.No).Elem(),
		"Noncharacter_Code_Point":	ValueOf(&pkg.Noncharacter_Code_Point).Elem(),
		"Number":	ValueOf(&pkg.Number).Elem(),
		"Ogham":	ValueOf(&pkg.Ogham).Elem(),
		"Ol_Chiki":	ValueOf(&pkg.Ol_Chiki).Elem(),
		"Old_Hungarian":	ValueOf(&pkg.Old_Hungarian).Elem(),
		"Old_Italic":	ValueOf(&pkg.Old_Italic).Elem(),
		"Old_North_Arabian":	ValueOf(&pkg.Old_North_Arabian).Elem(),
		"Old_Permic":	ValueOf(&pkg.Old_Permic).Elem(),
		"Old_Persian":	ValueOf(&pkg.Old_Persian).Elem(),
		"Old_South_Arabian":	ValueOf(&pkg.Old_South_Arabian).Elem(),
		"Old_Turkic":	ValueOf(&pkg.Old_Turkic).Elem(),
		"Oriya":	ValueOf(&pkg.Oriya).Elem(),
		"Osage":	ValueOf(&pkg.Osage).Elem(),
		"Osmanya":	ValueOf(&pkg.Osmanya).Elem(),
		"Other":	ValueOf(&pkg.Other).Elem(),
		"Other_Alphabetic":	ValueOf(&pkg.Other_Alphabetic).Elem(),
		"Other_Default_Ignorable_Code_Point":	ValueOf(&pkg.Other_Default_Ignorable_Code_Point).Elem(),
		"Other_Grapheme_Extend":	ValueOf(&pkg.Other_Grapheme_Extend).Elem(),
		"Other_ID_Continue":	ValueOf(&pkg.Other_ID_Continue).Elem(),
		"Other_ID_Start":	ValueOf(&pkg.Other_ID_Start).Elem(),
		"Other_Lowercase":	ValueOf(&pkg.Other_Lowercase).Elem(),
		"Other_Math":	ValueOf(&pkg.Other_Math).Elem(),
		"Other_Uppercase":	ValueOf(&pkg.Other_Uppercase).Elem(),
		"P":	ValueOf(&pkg.P).Elem(),
		"Pahawh_Hmong":	ValueOf(&pkg.Pahawh_Hmong).Elem(),
		"Palmyrene":	ValueOf(&pkg.Palmyrene).Elem(),
		"Pattern_Syntax":	ValueOf(&pkg.Pattern_Syntax).Elem(),
		"Pattern_White_Space":	ValueOf(&pkg.Pattern_White_Space).Elem(),
		"Pau_Cin_Hau":	ValueOf(&pkg.Pau_Cin_Hau).Elem(),
		"Pc":	ValueOf(&pkg.Pc).Elem(),
		"Pd":	ValueOf(&pkg.Pd).Elem(),
		"Pe":	ValueOf(&pkg.Pe).Elem(),
		"Pf":	ValueOf(&pkg.Pf).Elem(),
		"Phags_Pa":	ValueOf(&pkg.Phags_Pa).Elem(),
		"Phoenician":	ValueOf(&pkg.Phoenician).Elem(),
		"Pi":	ValueOf(&pkg.Pi).Elem(),
		"Po":	ValueOf(&pkg.Po).Elem(),
		"Prepended_Concatenation_Mark":	ValueOf(&pkg.Prepended_Concatenation_Mark).Elem(),
		"PrintRanges":	ValueOf(&pkg.PrintRanges).Elem(),
		"Properties":	ValueOf(&pkg.Properties).Elem(),
		"Ps":	ValueOf(&pkg.Ps).Elem(),
		"Psalter_Pahlavi":	ValueOf(&pkg.Psalter_Pahlavi).Elem(),
		"Punct":	ValueOf(&pkg.Punct).Elem(),
		"Quotation_Mark":	ValueOf(&pkg.Quotation_Mark).Elem(),
		"Radical":	ValueOf(&pkg.Radical).Elem(),
		"Rejang":	ValueOf(&pkg.Rejang).Elem(),
		"ReplacementChar":	ValueOf(pkg.ReplacementChar),
		"Runic":	ValueOf(&pkg.Runic).Elem(),
		"S":	ValueOf(&pkg.S).Elem(),
		"STerm":	ValueOf(&pkg.STerm).Elem(),
		"Samaritan":	ValueOf(&pkg.Samaritan).Elem(),
		"Saurashtra":	ValueOf(&pkg.Saurashtra).Elem(),
		"Sc":	ValueOf(&pkg.Sc).Elem(),
		"Scripts":	ValueOf(&pkg.Scripts).Elem(),
		"Sentence_Terminal":	ValueOf(&pkg.Sentence_Terminal).Elem(),
		"Sharada":	ValueOf(&pkg.Sharada).Elem(),
		"Shavian":	ValueOf(&pkg.Shavian).Elem(),
		"Siddham":	ValueOf(&pkg.Siddham).Elem(),
		"SignWriting":	ValueOf(&pkg.SignWriting).Elem(),
		"SimpleFold":	ValueOf(pkg.SimpleFold),
		"Sinhala":	ValueOf(&pkg.Sinhala).Elem(),
		"Sk":	ValueOf(&pkg.Sk).Elem(),
		"Sm":	ValueOf(&pkg.Sm).Elem(),
		"So":	ValueOf(&pkg.So).Elem(),
		"Soft_Dotted":	ValueOf(&pkg.Soft_Dotted).Elem(),
		"Sora_Sompeng":	ValueOf(&pkg.Sora_Sompeng).Elem(),
		"Space":	ValueOf(&pkg.Space).Elem(),
		"Sundanese":	ValueOf(&pkg.Sundanese).Elem(),
		"Syloti_Nagri":	ValueOf(&pkg.Syloti_Nagri).Elem(),
		"Symbol":	ValueOf(&pkg.Symbol).Elem(),
		"Syriac":	ValueOf(&pkg.Syriac).Elem(),
		"Tagalog":	ValueOf(&pkg.Tagalog).Elem(),
		"Tagbanwa":	ValueOf(&pkg.Tagbanwa).Elem(),
		"Tai_Le":	ValueOf(&pkg.Tai_Le).Elem(),
		"Tai_Tham":	ValueOf(&pkg.Tai_Tham).Elem(),
		"Tai_Viet":	ValueOf(&pkg.Tai_Viet).Elem(),
		"Takri":	ValueOf(&pkg.Takri).Elem(),
		"Tamil":	ValueOf(&pkg.Tamil).Elem(),
		"Tangut":	ValueOf(&pkg.Tangut).Elem(),
		"Telugu":	ValueOf(&pkg.Telugu).Elem(),
		"Terminal_Punctuation":	ValueOf(&pkg.Terminal_Punctuation).Elem(),
		"Thaana":	ValueOf(&pkg.Thaana).Elem(),
		"Thai":	ValueOf(&pkg.Thai).Elem(),
		"Tibetan":	ValueOf(&pkg.Tibetan).Elem(),
		"Tifinagh":	ValueOf(&pkg.Tifinagh).Elem(),
		"Tirhuta":	ValueOf(&pkg.Tirhuta).Elem(),
		"Title":	ValueOf(&pkg.Title).Elem(),
		"TitleCase":	ValueOf(pkg.TitleCase),
		"To":	ValueOf(pkg.To),
		"ToLower":	ValueOf(pkg.ToLower),
		"ToTitle":	ValueOf(pkg.ToTitle),
		"ToUpper":	ValueOf(pkg.ToUpper),
		"TurkishCase":	ValueOf(&pkg.TurkishCase).Elem(),
		"Ugaritic":	ValueOf(&pkg.Ugaritic).Elem(),
		"Unified_Ideograph":	ValueOf(&pkg.Unified_Ideograph).Elem(),
		"Upper":	ValueOf(&pkg.Upper).Elem(),
		"UpperCase":	ValueOf(pkg.UpperCase),
		"UpperLower":	ValueOf(pkg.UpperLower),
		"Vai":	ValueOf(&pkg.Vai).Elem(),
		"Variation_Selector":	ValueOf(&pkg.Variation_Selector).Elem(),
		"Version":	ValueOf(pkg.Version),
		"Warang_Citi":	ValueOf(&pkg.Warang_Citi).Elem(),
		"White_Space":	ValueOf(&pkg.White_Space).Elem(),
		"Yi":	ValueOf(&pkg.Yi).Elem(),
		"Z":	ValueOf(&pkg.Z).Elem(),
		"Zl":	ValueOf(&pkg.Zl).Elem(),
		"Zp":	ValueOf(&pkg.Zp).Elem(),
		"Zs":	ValueOf(&pkg.Zs).Elem(),
	}
	Types["unicode"] = map[string]Type{
		"CaseRange":	TypeOf((*pkg.CaseRange)(nil)).Elem(),
		"Range16":	TypeOf((*pkg.Range16)(nil)).Elem(),
		"Range32":	TypeOf((*pkg.Range32)(nil)).Elem(),
		"RangeTable":	TypeOf((*pkg.RangeTable)(nil)).Elem(),
		"SpecialCase":	TypeOf((*pkg.SpecialCase)(nil)).Elem(),
	}
}
