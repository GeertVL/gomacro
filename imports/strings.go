// this file was generated by gomacro command: import "strings"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	. "reflect"
	pkg "strings"
)

func Package_strings() (map[string]Value, map[string]Type) {
	return map[string]Value{
			"Compare":        ValueOf(pkg.Compare),
			"Contains":       ValueOf(pkg.Contains),
			"ContainsAny":    ValueOf(pkg.ContainsAny),
			"ContainsRune":   ValueOf(pkg.ContainsRune),
			"Count":          ValueOf(pkg.Count),
			"EqualFold":      ValueOf(pkg.EqualFold),
			"Fields":         ValueOf(pkg.Fields),
			"FieldsFunc":     ValueOf(pkg.FieldsFunc),
			"HasPrefix":      ValueOf(pkg.HasPrefix),
			"HasSuffix":      ValueOf(pkg.HasSuffix),
			"Index":          ValueOf(pkg.Index),
			"IndexAny":       ValueOf(pkg.IndexAny),
			"IndexByte":      ValueOf(pkg.IndexByte),
			"IndexFunc":      ValueOf(pkg.IndexFunc),
			"IndexRune":      ValueOf(pkg.IndexRune),
			"Join":           ValueOf(pkg.Join),
			"LastIndex":      ValueOf(pkg.LastIndex),
			"LastIndexAny":   ValueOf(pkg.LastIndexAny),
			"LastIndexByte":  ValueOf(pkg.LastIndexByte),
			"LastIndexFunc":  ValueOf(pkg.LastIndexFunc),
			"Map":            ValueOf(pkg.Map),
			"NewReader":      ValueOf(pkg.NewReader),
			"NewReplacer":    ValueOf(pkg.NewReplacer),
			"Repeat":         ValueOf(pkg.Repeat),
			"Replace":        ValueOf(pkg.Replace),
			"Split":          ValueOf(pkg.Split),
			"SplitAfter":     ValueOf(pkg.SplitAfter),
			"SplitAfterN":    ValueOf(pkg.SplitAfterN),
			"SplitN":         ValueOf(pkg.SplitN),
			"Title":          ValueOf(pkg.Title),
			"ToLower":        ValueOf(pkg.ToLower),
			"ToLowerSpecial": ValueOf(pkg.ToLowerSpecial),
			"ToTitle":        ValueOf(pkg.ToTitle),
			"ToTitleSpecial": ValueOf(pkg.ToTitleSpecial),
			"ToUpper":        ValueOf(pkg.ToUpper),
			"ToUpperSpecial": ValueOf(pkg.ToUpperSpecial),
			"Trim":           ValueOf(pkg.Trim),
			"TrimFunc":       ValueOf(pkg.TrimFunc),
			"TrimLeft":       ValueOf(pkg.TrimLeft),
			"TrimLeftFunc":   ValueOf(pkg.TrimLeftFunc),
			"TrimPrefix":     ValueOf(pkg.TrimPrefix),
			"TrimRight":      ValueOf(pkg.TrimRight),
			"TrimRightFunc":  ValueOf(pkg.TrimRightFunc),
			"TrimSpace":      ValueOf(pkg.TrimSpace),
			"TrimSuffix":     ValueOf(pkg.TrimSuffix),
		}, map[string]Type{
			"Reader":   TypeOf((*pkg.Reader)(nil)).Elem(),
			"Replacer": TypeOf((*pkg.Replacer)(nil)).Elem(),
		}
}

func init() {
	binds, types := Package_strings()
	Binds["strings"] = binds
	Types["strings"] = types
}
