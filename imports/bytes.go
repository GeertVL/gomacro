// this file was generated by gomacro command: import "bytes"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "bytes"
	. "reflect"
)

func init() {
	Binds["bytes"] = map[string]Value{
		"Compare":	ValueOf(pkg.Compare),
		"Contains":	ValueOf(pkg.Contains),
		"ContainsAny":	ValueOf(pkg.ContainsAny),
		"ContainsRune":	ValueOf(pkg.ContainsRune),
		"Count":	ValueOf(pkg.Count),
		"Equal":	ValueOf(pkg.Equal),
		"EqualFold":	ValueOf(pkg.EqualFold),
		"ErrTooLarge":	ValueOf(&pkg.ErrTooLarge).Elem(),
		"Fields":	ValueOf(pkg.Fields),
		"FieldsFunc":	ValueOf(pkg.FieldsFunc),
		"HasPrefix":	ValueOf(pkg.HasPrefix),
		"HasSuffix":	ValueOf(pkg.HasSuffix),
		"Index":	ValueOf(pkg.Index),
		"IndexAny":	ValueOf(pkg.IndexAny),
		"IndexByte":	ValueOf(pkg.IndexByte),
		"IndexFunc":	ValueOf(pkg.IndexFunc),
		"IndexRune":	ValueOf(pkg.IndexRune),
		"Join":	ValueOf(pkg.Join),
		"LastIndex":	ValueOf(pkg.LastIndex),
		"LastIndexAny":	ValueOf(pkg.LastIndexAny),
		"LastIndexByte":	ValueOf(pkg.LastIndexByte),
		"LastIndexFunc":	ValueOf(pkg.LastIndexFunc),
		"Map":	ValueOf(pkg.Map),
		"MinRead":	ValueOf(pkg.MinRead),
		"NewBuffer":	ValueOf(pkg.NewBuffer),
		"NewBufferString":	ValueOf(pkg.NewBufferString),
		"NewReader":	ValueOf(pkg.NewReader),
		"Repeat":	ValueOf(pkg.Repeat),
		"Replace":	ValueOf(pkg.Replace),
		"Runes":	ValueOf(pkg.Runes),
		"Split":	ValueOf(pkg.Split),
		"SplitAfter":	ValueOf(pkg.SplitAfter),
		"SplitAfterN":	ValueOf(pkg.SplitAfterN),
		"SplitN":	ValueOf(pkg.SplitN),
		"Title":	ValueOf(pkg.Title),
		"ToLower":	ValueOf(pkg.ToLower),
		"ToLowerSpecial":	ValueOf(pkg.ToLowerSpecial),
		"ToTitle":	ValueOf(pkg.ToTitle),
		"ToTitleSpecial":	ValueOf(pkg.ToTitleSpecial),
		"ToUpper":	ValueOf(pkg.ToUpper),
		"ToUpperSpecial":	ValueOf(pkg.ToUpperSpecial),
		"Trim":	ValueOf(pkg.Trim),
		"TrimFunc":	ValueOf(pkg.TrimFunc),
		"TrimLeft":	ValueOf(pkg.TrimLeft),
		"TrimLeftFunc":	ValueOf(pkg.TrimLeftFunc),
		"TrimPrefix":	ValueOf(pkg.TrimPrefix),
		"TrimRight":	ValueOf(pkg.TrimRight),
		"TrimRightFunc":	ValueOf(pkg.TrimRightFunc),
		"TrimSpace":	ValueOf(pkg.TrimSpace),
		"TrimSuffix":	ValueOf(pkg.TrimSuffix),
	}
	Types["bytes"] = map[string]Type{
		"Buffer":	TypeOf((*pkg.Buffer)(nil)).Elem(),
		"Reader":	TypeOf((*pkg.Reader)(nil)).Elem(),
	}
}
