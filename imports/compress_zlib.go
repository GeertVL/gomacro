// this file was generated by gomacro command: import "compress/zlib"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "compress/zlib"
	. "reflect"
)

func Package_compress_zlib() (map[string]Value, map[string]Type) {
	return map[string]Value{
			"BestCompression":    ValueOf(pkg.BestCompression),
			"BestSpeed":          ValueOf(pkg.BestSpeed),
			"DefaultCompression": ValueOf(pkg.DefaultCompression),
			"ErrChecksum":        ValueOf(&pkg.ErrChecksum).Elem(),
			"ErrDictionary":      ValueOf(&pkg.ErrDictionary).Elem(),
			"ErrHeader":          ValueOf(&pkg.ErrHeader).Elem(),
			"HuffmanOnly":        ValueOf(pkg.HuffmanOnly),
			"NewReader":          ValueOf(pkg.NewReader),
			"NewReaderDict":      ValueOf(pkg.NewReaderDict),
			"NewWriter":          ValueOf(pkg.NewWriter),
			"NewWriterLevel":     ValueOf(pkg.NewWriterLevel),
			"NewWriterLevelDict": ValueOf(pkg.NewWriterLevelDict),
			"NoCompression":      ValueOf(pkg.NoCompression),
		}, map[string]Type{
			"Resetter": TypeOf((*pkg.Resetter)(nil)).Elem(),
			"Writer":   TypeOf((*pkg.Writer)(nil)).Elem(),
		}
}

func init() {
	binds, types := Package_compress_zlib()
	Binds["compress/zlib"] = binds
	Types["compress/zlib"] = types
}
