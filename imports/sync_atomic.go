// this file was generated by gomacro command: import "sync/atomic"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	. "reflect"
	pkg "sync/atomic"
)

func Package_sync_atomic() (map[string]Value, map[string]Type) {
	return map[string]Value{
			"AddInt32":              ValueOf(pkg.AddInt32),
			"AddInt64":              ValueOf(pkg.AddInt64),
			"AddUint32":             ValueOf(pkg.AddUint32),
			"AddUint64":             ValueOf(pkg.AddUint64),
			"AddUintptr":            ValueOf(pkg.AddUintptr),
			"CompareAndSwapInt32":   ValueOf(pkg.CompareAndSwapInt32),
			"CompareAndSwapInt64":   ValueOf(pkg.CompareAndSwapInt64),
			"CompareAndSwapPointer": ValueOf(pkg.CompareAndSwapPointer),
			"CompareAndSwapUint32":  ValueOf(pkg.CompareAndSwapUint32),
			"CompareAndSwapUint64":  ValueOf(pkg.CompareAndSwapUint64),
			"CompareAndSwapUintptr": ValueOf(pkg.CompareAndSwapUintptr),
			"LoadInt32":             ValueOf(pkg.LoadInt32),
			"LoadInt64":             ValueOf(pkg.LoadInt64),
			"LoadPointer":           ValueOf(pkg.LoadPointer),
			"LoadUint32":            ValueOf(pkg.LoadUint32),
			"LoadUint64":            ValueOf(pkg.LoadUint64),
			"LoadUintptr":           ValueOf(pkg.LoadUintptr),
			"StoreInt32":            ValueOf(pkg.StoreInt32),
			"StoreInt64":            ValueOf(pkg.StoreInt64),
			"StorePointer":          ValueOf(pkg.StorePointer),
			"StoreUint32":           ValueOf(pkg.StoreUint32),
			"StoreUint64":           ValueOf(pkg.StoreUint64),
			"StoreUintptr":          ValueOf(pkg.StoreUintptr),
			"SwapInt32":             ValueOf(pkg.SwapInt32),
			"SwapInt64":             ValueOf(pkg.SwapInt64),
			"SwapPointer":           ValueOf(pkg.SwapPointer),
			"SwapUint32":            ValueOf(pkg.SwapUint32),
			"SwapUint64":            ValueOf(pkg.SwapUint64),
			"SwapUintptr":           ValueOf(pkg.SwapUintptr),
		}, map[string]Type{
			"Value": TypeOf((*pkg.Value)(nil)).Elem(),
		}
}

func init() {
	binds, types := Package_sync_atomic()
	Binds["sync/atomic"] = binds
	Types["sync/atomic"] = types
}
