// this file was generated by gomacro command: import "go/parser"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "go/parser"
	. "reflect"
)

func Package_go_parser() (map[string]Value, map[string]Type) {
	return map[string]Value{
			"AllErrors":         ValueOf(pkg.AllErrors),
			"DeclarationErrors": ValueOf(pkg.DeclarationErrors),
			"ImportsOnly":       ValueOf(pkg.ImportsOnly),
			"PackageClauseOnly": ValueOf(pkg.PackageClauseOnly),
			"ParseComments":     ValueOf(pkg.ParseComments),
			"ParseDir":          ValueOf(pkg.ParseDir),
			"ParseExpr":         ValueOf(pkg.ParseExpr),
			"ParseExprFrom":     ValueOf(pkg.ParseExprFrom),
			"ParseFile":         ValueOf(pkg.ParseFile),
			"SpuriousErrors":    ValueOf(pkg.SpuriousErrors),
			"Trace":             ValueOf(pkg.Trace),
		}, map[string]Type{
			"Mode": TypeOf((*pkg.Mode)(nil)).Elem(),
		}
}

func init() {
	binds, types := Package_go_parser()
	Binds["go/parser"] = binds
	Types["go/parser"] = types
}
