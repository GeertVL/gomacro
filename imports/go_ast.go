// this file was generated by gomacro command: import "go/ast"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "go/ast"
	. "reflect"
)

func init() {
	Binds["go/ast"] = map[string]Value{
		"Bad":	ValueOf(pkg.Bad),
		"Con":	ValueOf(pkg.Con),
		"FileExports":	ValueOf(pkg.FileExports),
		"FilterDecl":	ValueOf(pkg.FilterDecl),
		"FilterFile":	ValueOf(pkg.FilterFile),
		"FilterFuncDuplicates":	ValueOf(pkg.FilterFuncDuplicates),
		"FilterImportDuplicates":	ValueOf(pkg.FilterImportDuplicates),
		"FilterPackage":	ValueOf(pkg.FilterPackage),
		"FilterUnassociatedComments":	ValueOf(pkg.FilterUnassociatedComments),
		"Fprint":	ValueOf(pkg.Fprint),
		"Fun":	ValueOf(pkg.Fun),
		"Inspect":	ValueOf(pkg.Inspect),
		"IsExported":	ValueOf(pkg.IsExported),
		"Lbl":	ValueOf(pkg.Lbl),
		"MergePackageFiles":	ValueOf(pkg.MergePackageFiles),
		"NewCommentMap":	ValueOf(pkg.NewCommentMap),
		"NewIdent":	ValueOf(pkg.NewIdent),
		"NewObj":	ValueOf(pkg.NewObj),
		"NewPackage":	ValueOf(pkg.NewPackage),
		"NewScope":	ValueOf(pkg.NewScope),
		"NotNilFilter":	ValueOf(pkg.NotNilFilter),
		"PackageExports":	ValueOf(pkg.PackageExports),
		"Pkg":	ValueOf(pkg.Pkg),
		"Print":	ValueOf(pkg.Print),
		"RECV":	ValueOf(pkg.RECV),
		"SEND":	ValueOf(pkg.SEND),
		"SortImports":	ValueOf(pkg.SortImports),
		"Typ":	ValueOf(pkg.Typ),
		"Var":	ValueOf(pkg.Var),
		"Walk":	ValueOf(pkg.Walk),
	}
	Types["go/ast"] = map[string]Type{
		"ArrayType":	TypeOf((*pkg.ArrayType)(nil)).Elem(),
		"AssignStmt":	TypeOf((*pkg.AssignStmt)(nil)).Elem(),
		"BadDecl":	TypeOf((*pkg.BadDecl)(nil)).Elem(),
		"BadExpr":	TypeOf((*pkg.BadExpr)(nil)).Elem(),
		"BadStmt":	TypeOf((*pkg.BadStmt)(nil)).Elem(),
		"BasicLit":	TypeOf((*pkg.BasicLit)(nil)).Elem(),
		"BinaryExpr":	TypeOf((*pkg.BinaryExpr)(nil)).Elem(),
		"BlockStmt":	TypeOf((*pkg.BlockStmt)(nil)).Elem(),
		"BranchStmt":	TypeOf((*pkg.BranchStmt)(nil)).Elem(),
		"CallExpr":	TypeOf((*pkg.CallExpr)(nil)).Elem(),
		"CaseClause":	TypeOf((*pkg.CaseClause)(nil)).Elem(),
		"ChanDir":	TypeOf((*pkg.ChanDir)(nil)).Elem(),
		"ChanType":	TypeOf((*pkg.ChanType)(nil)).Elem(),
		"CommClause":	TypeOf((*pkg.CommClause)(nil)).Elem(),
		"Comment":	TypeOf((*pkg.Comment)(nil)).Elem(),
		"CommentGroup":	TypeOf((*pkg.CommentGroup)(nil)).Elem(),
		"CommentMap":	TypeOf((*pkg.CommentMap)(nil)).Elem(),
		"CompositeLit":	TypeOf((*pkg.CompositeLit)(nil)).Elem(),
		"Decl":	TypeOf((*pkg.Decl)(nil)).Elem(),
		"DeclStmt":	TypeOf((*pkg.DeclStmt)(nil)).Elem(),
		"DeferStmt":	TypeOf((*pkg.DeferStmt)(nil)).Elem(),
		"Ellipsis":	TypeOf((*pkg.Ellipsis)(nil)).Elem(),
		"EmptyStmt":	TypeOf((*pkg.EmptyStmt)(nil)).Elem(),
		"Expr":	TypeOf((*pkg.Expr)(nil)).Elem(),
		"ExprStmt":	TypeOf((*pkg.ExprStmt)(nil)).Elem(),
		"Field":	TypeOf((*pkg.Field)(nil)).Elem(),
		"FieldFilter":	TypeOf((*pkg.FieldFilter)(nil)).Elem(),
		"FieldList":	TypeOf((*pkg.FieldList)(nil)).Elem(),
		"File":	TypeOf((*pkg.File)(nil)).Elem(),
		"Filter":	TypeOf((*pkg.Filter)(nil)).Elem(),
		"ForStmt":	TypeOf((*pkg.ForStmt)(nil)).Elem(),
		"FuncDecl":	TypeOf((*pkg.FuncDecl)(nil)).Elem(),
		"FuncLit":	TypeOf((*pkg.FuncLit)(nil)).Elem(),
		"FuncType":	TypeOf((*pkg.FuncType)(nil)).Elem(),
		"GenDecl":	TypeOf((*pkg.GenDecl)(nil)).Elem(),
		"GoStmt":	TypeOf((*pkg.GoStmt)(nil)).Elem(),
		"Ident":	TypeOf((*pkg.Ident)(nil)).Elem(),
		"IfStmt":	TypeOf((*pkg.IfStmt)(nil)).Elem(),
		"ImportSpec":	TypeOf((*pkg.ImportSpec)(nil)).Elem(),
		"Importer":	TypeOf((*pkg.Importer)(nil)).Elem(),
		"IncDecStmt":	TypeOf((*pkg.IncDecStmt)(nil)).Elem(),
		"IndexExpr":	TypeOf((*pkg.IndexExpr)(nil)).Elem(),
		"InterfaceType":	TypeOf((*pkg.InterfaceType)(nil)).Elem(),
		"KeyValueExpr":	TypeOf((*pkg.KeyValueExpr)(nil)).Elem(),
		"LabeledStmt":	TypeOf((*pkg.LabeledStmt)(nil)).Elem(),
		"MapType":	TypeOf((*pkg.MapType)(nil)).Elem(),
		"MergeMode":	TypeOf((*pkg.MergeMode)(nil)).Elem(),
		"Node":	TypeOf((*pkg.Node)(nil)).Elem(),
		"ObjKind":	TypeOf((*pkg.ObjKind)(nil)).Elem(),
		"Object":	TypeOf((*pkg.Object)(nil)).Elem(),
		"Package":	TypeOf((*pkg.Package)(nil)).Elem(),
		"ParenExpr":	TypeOf((*pkg.ParenExpr)(nil)).Elem(),
		"RangeStmt":	TypeOf((*pkg.RangeStmt)(nil)).Elem(),
		"ReturnStmt":	TypeOf((*pkg.ReturnStmt)(nil)).Elem(),
		"Scope":	TypeOf((*pkg.Scope)(nil)).Elem(),
		"SelectStmt":	TypeOf((*pkg.SelectStmt)(nil)).Elem(),
		"SelectorExpr":	TypeOf((*pkg.SelectorExpr)(nil)).Elem(),
		"SendStmt":	TypeOf((*pkg.SendStmt)(nil)).Elem(),
		"SliceExpr":	TypeOf((*pkg.SliceExpr)(nil)).Elem(),
		"Spec":	TypeOf((*pkg.Spec)(nil)).Elem(),
		"StarExpr":	TypeOf((*pkg.StarExpr)(nil)).Elem(),
		"Stmt":	TypeOf((*pkg.Stmt)(nil)).Elem(),
		"StructType":	TypeOf((*pkg.StructType)(nil)).Elem(),
		"SwitchStmt":	TypeOf((*pkg.SwitchStmt)(nil)).Elem(),
		"TypeAssertExpr":	TypeOf((*pkg.TypeAssertExpr)(nil)).Elem(),
		"TypeSpec":	TypeOf((*pkg.TypeSpec)(nil)).Elem(),
		"TypeSwitchStmt":	TypeOf((*pkg.TypeSwitchStmt)(nil)).Elem(),
		"UnaryExpr":	TypeOf((*pkg.UnaryExpr)(nil)).Elem(),
		"ValueSpec":	TypeOf((*pkg.ValueSpec)(nil)).Elem(),
		"Visitor":	TypeOf((*pkg.Visitor)(nil)).Elem(),
	}
}
