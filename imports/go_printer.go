// this file was generated by gomacro command: import "go/printer"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	pkg "go/printer"
	. "reflect"
)

func Package_go_printer() (map[string]Value, map[string]Type) {
	return map[string]Value{
			"Fprint":    ValueOf(pkg.Fprint),
			"RawFormat": ValueOf(pkg.RawFormat),
			"SourcePos": ValueOf(pkg.SourcePos),
			"TabIndent": ValueOf(pkg.TabIndent),
			"UseSpaces": ValueOf(pkg.UseSpaces),
		}, map[string]Type{
			"CommentedNode": TypeOf((*pkg.CommentedNode)(nil)).Elem(),
			"Config":        TypeOf((*pkg.Config)(nil)).Elem(),
			"Mode":          TypeOf((*pkg.Mode)(nil)).Elem(),
		}
}

func init() {
	binds, types := Package_go_printer()
	Binds["go/printer"] = binds
	Types["go/printer"] = types
}
